# MaleficNet: Hiding Malware into Deep Neural Networks Using Spread-Spectrum Channel Coding

[toc]

# 摘要

训练和开发良好的深度学习模型通常是一项具有挑战性的任务，因此导致个人（开发人员、研究人员和从业人员）使用驻扎在公共资源库中的第三方模型，通常不费吹灰之力就能根据自己的需要对这些模型进行微调。尽管它有不可否认的好处，但这种做法会导致新的攻击载体。在本文中，我们展示了这样一种攻击的可行性和有效性，即恶意软件嵌入深度学习模型中。我们通过引入MaleficNet突破了当前最先进的技术界限，该技术结合了扩频信道编码和纠错技术，在深度神经网络的参数中注入恶意的有效载荷，同时不会对模型的性能造成影响，并成功绕过了最先进的检测和清除机制。我们相信这项工作将提高人们对这些新的、危险的、伪装的威胁的认识，协助研究界和从业人员评估现代机器学习架构的能力，并为针对检测和缓解此类威胁的研究铺平道路。

# 1、介绍

机器学习（ML）的突破，特别是深度学习（DL）领域的突破，是当今技术进步的主导因素，不断推动着计算机视觉[6,7,17,22,33,45]、自然语言处理[4,13,14]、语音识别[9,15,46]、网络安全[1,10,11,18,30]等领域的发展[26]。基于深度神经网络（DNN）的技术现在是大量现实世界的应用和系统的重要供应链组成部分[3]。深度神经网络通过摄取大量的数据进行学习，同时经历几个周期的训练。较深的架构被证明优于其浅层的同行，提取和学习与手头任务相关的更复杂的细节（特征）。现有的最先进的架构达到了数万亿1的参数[4,13]，导致一些研究人员和其他感兴趣的人依赖预先训练好的 "现成的 "架构，通常从公共在线媒体上下载它们。获得公开可用的、预先训练好的模型的好处显然是不可否认的。然而，在没有额外审查机制的情况下，将DNN纳入更大的行业管道，可能会导致针对相关实体的新攻击载体。例如，Liu等人[25]最近的工作表明，将恶意软件的有效载荷注入DNN参数是可行的，这导致了一种新形式的窃密软件。Wang等人[42,43]进一步扩展了这项工作，他们增加了注入的恶意软件有效载荷的大小，同时保持了模型的准确性不变。

本文提出了MaleficNet，一种新型的有效载荷嵌入技术，利用码分多址（CDMA）扩频信道编码[36]和低密度奇偶校验（LDPC）纠错[31]，将恶意软件有效载荷以兆字节为单位注入不同的DNN架构中。CDMA与LDPC的耦合使MaleficNet能够以隐蔽的方式嵌入恶意的有效载荷，同时也对试图破坏有效载荷内容的各种DNN修改具有鲁棒性。MaleficNet可以成功绕过最先进的恶意软件检测引擎，如MetaDefender[27]。此外，MaleficNet对微调和参数修剪等清除技术具有鲁棒性，这些技术在以前的方法中已被证明可以减轻威胁[25,42,43]。我们相信，这里提出的工作将有助于进一步提高社区的认识，并有助于对这种攻击的新的、有效的缓解策略。

我们的贡献可以概括为以下几点。

\- 我们介绍了MaleficNet，一种基于CDMA扩频信道编码和LDPC纠错技术组合的新型深度神经网络有效载荷嵌入技术。将这两种技术结合在一起，使得MaleficNet无法被恶意软件检测引擎检测到，并且对清除企图具有很强的抵抗力。

\- 我们证明MaleficNet是独立于领域的，我们在不同的条件下进行了广泛的经验评估：a）不同的有效载荷大小；b）不同的DNN架构；c）几个基准数据集；d）不同的分类任务；以及d）多个领域，包括图像、文本和音频。

\- 我们对MaleficNet模型与最先进的恶意软件检测技术（如MetaDefender[27]）进行了测试，证明MaleficNet的有效载荷未被检测到。

\- 我们表明，现有的缓解技术，尽管对先前的工作[25,42,43]很有效，但对MaleficNet的影响可以忽略不计。

\- 我们在这个链接https://github.com/pagiux/maleficnet，提供了重现MaleficNet的评估的源代码

# 2、背景

## 2.1 深度神经网络

深度神经网络[28]是一种算法，旨在识别、提取和学习相关的信息和一组输入数据之间的关系，而不需要领域专家费力的特征工程。DNNs能够从大量的高维数据（如图像）中学习，在一些学习任务中具有基准结果。在本文中，我们将评估重点放在分类任务上。分类问题是利用一个由（x，y）数据对组成的标记数据集，目标是学习一个能够将数据点x映射到其相应的目标标签y的函数f。学习过程由损失函数l指导，该函数l衡量所学函数f的错误分类率。
$$
\hat{\theta}=\arg \underset{\theta \in \Theta}{\min}\sum_il\left(f(x_i;\theta), y_i\right)
$$
为了获得一个足够好的f，深度神经网络需要大量的（x，y）数据对，训练过程往往需要使用专门的硬件，如GPU。这些要求使得生产高质量的DNN非常昂贵，从而推动了多个实体从市场上获得这些训练有素的模型[20]。

## 2.2 偷渡软件

Stegomalware[35]是一种使用隐写术[5]来阻碍检测的恶意软件。数字隐写术是将信息隐藏到数字传输介质中的做法：例如，文件（图像、视频、文件）或通信协议（网络流量、计算机内部交换的数据）。这种恶意软件通过建立一个隐写系统来隐藏其资源中的恶意代码。一个守护进程在后台运行，根据触发条件动态地提取和执行恶意代码。在我们的案例中，数字文件对应的是训练好的深度神经网络，其中模型的权重参数作为隐藏恶意软件的媒介。这种做法与该领域先前的研究相一致[25,42,43]。

## 2.3 扩频信道编码

扩频技术[36]开发于20世纪50年代，目的是为军队提供隐秘的通信，扩频技术是将具有特定带宽的信号（如电信号或电磁信号）在频域中传播的方法。扩频技术利用连续的类似噪音的信号结构，将一个典型的窄带信息信号传播到一个宽频段上。接收器为了检索原始信息信号，将收到的信号与发射器的特定共享秘密信息（即扩频码）联系起来。此外，使用类似噪音的结构隐藏原始信息信号，除了隐藏通信正在发生的事实外，还可以抵抗来自敌方实体的通信干扰企图[38]。

码分多址（CDMA）是我们在这项工作中采用的扩频技术，是一种低成本的技术，用于在信道中传播信息，并在低功率系统中实现容量，即当每个信道使用的比特数很低时[40]。
$$
\dfrac{E_b}{N_0}=\dfrac{2^C-1}{C}
$$
C是信道的容量，单位是比特/秒/赫兹，Eb是每次使用信道时每比特的能量，N0是高斯噪声的功率谱密度。CDMA的容量在[39]中首次被研究，表明可以达到总容量。在[32]中，作者表明，当所有用户传输相同的功率和最多有多少用户的芯片时，对称容量与总容量相等。最后，在[41]中，作者证明了对于具有不同传输功率的用户，只要它们不是过大，也可以实现总容量。当用户数小于信道使用数时，可以通过使用Walsh矩阵来实现对称容量[40]。按照[32]，我们可以对每个信道使用的比特进行编码，仍然可以实现容量。

## 2.4 纠错代码

纠错码（ECC）是一种编码方案，它以二进制数字的形式传输信息，这样，即使某些比特被错误地翻转，信息也可以被恢复[2]。它们几乎被用于所有的信息传输情况，特别是在数据存储中，ECC可以抵御数据损坏。在MaleficNet中，为了使其对可能破坏嵌入式有效载荷的清除技术具有鲁棒性，我们采用了LDPC码来检测和纠正翻转的比特。

**低密度奇偶校验码。**信道编码允许在数字通信中通过增加传输序列的冗余度来检测和纠正错误。例如，广为人知的汉明（7,4）码在四个信息位上增加了三个冗余位，以便能够纠正任何收到的有一个错误的字。一般来说，香农编码定理[8]告诉我们，当比特数趋向于无穷大时，对于一个给定的冗余水平，可以纠正的错误数量是有限的。低密度奇偶校验（LDPC）码[31]是线性码，允许对收到的字进行线性时间解码，准线性编码，并随着比特数趋于无穷大而接近容量。LPDC码依赖于奇偶校验矩阵，随着比特数的增长，每一列的1的数量越来越少。这些编码可以被证明随着比特数的增加而接近容量，并且有一个近似的解码算法，即信念传播，可以在线性时间内运行[31]。

# 3 威胁模型

我们把自己定位在一个类似于该领域先前工作所考虑的威胁模型中[25,42,43]。在这个威胁模型中，对手是广泛的 DNN 社区的任何成员，他们创造并分发（销售）恶意的 DNN。这样一个公布的 DNN 被宣传，并在正常条件下按预期运行（即它在预定任务上的表现与非恶意 DNN 相似）；然而，它的参数中含有恶意的有效载荷。一旦DNN被部署在终端用户一侧，对手就无法远程访问或控制它。在另一端，最终用户是任何消费DNN服务的实体，包括由我们的对手提供的服务。如今，这是一个典型的场景。由于与数据集创建和模型训练相关的成本很大，许多实体（公司或个人）依靠DNN市场来获得并在其产品中纳入基于机器学习的解决方案。终端用户将把这些市场上的DNN解决方案部署在一个配备了反恶意软件工具并有防火墙保护的可信环境中，因此对手提供的DNN模型应该绕过反恶意软件扫描，之后能够在终端用户组织内提取并执行恶意的有效载荷。这意味着恶意的DNN应该是独立的，对手只能在服务创建阶段修改DNN模型（包括模型参数和测试算法）。

这项工作介绍了MaleficNet，这是一种基于扩频信道编码的新颖而稳健的有效载荷嵌入技术。MaleficNet被对手用来在DNN模型参数中嵌入恶意的有效载荷。

## 3.1 威胁情况概述

为了将DNN转化为窃取软件，我们采取以下步骤。


- 准备DNN模型和恶意软件的有效载荷。最终将包含恶意软件有效载荷的DNN模型可以由对手从头开始训练，或者通过DNN市场[20]获得，并在此基础上建立。在DNN考虑之后，对手必须选择将被注入模型的恶意有效载荷。恶意有效载荷可以是任何东西，从已经知道的恶意软件到由对手根据其需要创建的新的特定恶意软件。


- 有效载荷注入。对手将恶意软件的有效载荷注入到DNN模型中，这样模型在合法任务上的表现就不会受到影响。此外，对手将试图以隐蔽的方式注入恶意软件有效载荷，这样它就不会被反恶意软件和其他对模型文件进行的安全检查发现。在我们的案例中，对手利用MaleficNet以隐蔽的方式注入恶意软件的有效载荷。

- 触发器创建。触发器是一种机制，允许在外部刺激（或命令）下控制嵌入式有效载荷的执行。我们的触发机制基于先前的工作[25]基于logits的触发器。为了将触发器插入自成一体的恶意DNN模型，对手可以利用模型底层实现库的一个漏洞（例如，不安全的反序列化[34]）。一旦触发器被设置好，在DNN模型的动态执行过程中，它将观察模型的logits，在预定义的情况下，它将触发提取和执行有效载荷。

# 4 MaleficNet

在本节中，我们对MaleficNet的内部工作进行了扩展，深入探讨了我们如何定制和应用CDMA扩频技术和LDPC纠错代码来创建MaleficNet。

在这种情况下，对手想把一个$m$比特的恶意有效载荷$b=[b_0,...,b_{m-1}]$嵌入到一个深度神经网络的模型参数中。为简单起见，考虑将DNN的权重参数组织为一个向量w。最初，我们将恶意软件有效载荷$b$分为n个维度为$d$的块，形成维度为$n\times d$的矩阵$B$，因此B=$[b_0,...,b_n]$，其中$b_i=[b_{i-d},...,b_{(i+1)\cdot d}]$。之后，我们还将向量$w$分成$n$个大小为$s$的块，使得$n-s$等于（或小于）$w$的元素数。使用CDMA，有效载荷的比特被编码为±1。有效载荷的比特的传播码是一个长度为$s$的向量，包含$+1$和$-1$，以相等的概率随机产生。$C_j$是一个$s\times d$的矩阵，收集了每个比特块的所有扩频码（这个矩阵可以是相同的，也可以是不同的，但不影响通用性）。

CDMA中的编码只需要是准正交的，CDMA就能工作[40]。如果传播码足够长，非正交性的泄漏就会小于信道中的噪声（在我们的例子中，是DNN的原始权重），它不会改变CDMA的特性。我们也可以使用Hadamard矩阵或Gold Codes（用于3G），这些都是正交的，但随机码有类似的特性，更容易分析。在我们把恶意软件和神经网络都分成几块后，我们把恶意软件的一块嵌入到神经网络的一块中。
$$
w_j^{MaleficNet}=w_j+\gamma C_jb_j
$$
现在，对手可以恢复每个比特bji = sign(˜bji)，其中
$$
\tilde{b}_{ji}=c^T_{ji}w_j^{MaleficNet}=s\gamma b_{ji}+c_{ji}^Tw_j+\gamma\sum_{k\ne i}c_{ji}^Tc_{jk}b_{jk}
$$


$b_{ji}$前面的$s$来自$||c_{ji}||^2=s$，$\sum_{k\ne i} c_{ji}^Tc_{jk}$是$\sqrt s$的数量级。$c_{ji}$是一个与$w_j$不相关的$$±1$$的随机向量，这意味着$c_{ji}^Tw_j$项是神经网络权重向量的标准差的数量级，这种数量的噪声可以通过使用纠错码来解决，我们将在下面介绍。通过仔细选择$\gamma$超参数，我们可以使公式4中的后两个项相对于第一个项来说可以忽略不计。

为了确保稳健性并允许正确提取有效载荷，我们还采用了LDPC码将有效载荷嵌入DNN中。我们使用一个速率为1/2的每列三个一的编码。Richardson和Urbanke[31]表明，这种LDPC参数的选择在线性时间解码的纠错方面表现出非常好的特性。LDPC需要对信道噪声方差的估计来进行纠错。为了对信道噪声方差进行可靠的估计，我们在有效载荷的开始加入了200个随机生成的比特序列（映射到±1）。总的来说，基于CDMA扩频技术嵌入DNN的有效载荷是由200位序言和LDPC编码的有效载荷（即有效载荷和纠错位）组成。关于MaleficNet的嵌入和提取算法的实际执行情况，见附录B。

# 5 实验设置

## 5.1 数据集

我们选择了以下基准数据集来评估MaleficNet。我们使用了MNIST[23]、FashionMNIST[44]、Cifar10[21]、Cifar100[21]、ImageNet[12]数据集以及Imagenet数据集的一个子集，即猫与狗的数据集。MNIST手写数字数据集由60,000张训练图像和10,000张测试灰度图像组成，尺寸为28×28像素，平均分为10类。CIFAR-10[21]数据集由50,000张训练和10,000张测试的32×32彩色图像组成，平均分为10个等级。CIFAR-100[21]数据集由50,000张训练和10,000张测试的32×32彩色图像组成，平均分为100类。FashionMNIST[44]服装数据集由60,000张训练和10,000张测试灰度图像组成，尺寸为28×28像素，平均分为10类。ImageNet[12]，是一个用于图像分类的大型图像数据集。它包含1000个类，128万张训练图像和5万张验证图像。Cats vs. Dogs数据集由25,000张图像组成，平均分为两个类别。

表1. 用于评估MaleficNet的恶意软件有效载荷

## 5.2 DNN架构

在我们的评估中，我们采用了不同大小的架构。通过这种方式，我们也可以经验性地评估在不损害其预定任务性能的情况下，可以嵌入网络内部的有效载荷量。更具体地说，这些架构是。Densenet[19]有700万个参数，ResNet50和ResNet101[17]分别有2350和4250万个参数，VGG11和VGG16[33]分别有1.28和1.34亿个参数。

## 5.3 有效载荷

为了评估MaleficNet，我们使用了不同大小的恶意软件有效载荷。这些恶意软件是从TheZoo[29]下载的。TheZoo是一个恶意软件库，它的创建是为了使恶意软件分析的可能性向公众开放，并包含大量的恶意软件类型和版本。对于我们的评估，我们选择了12个恶意软件，范围从几千字节到几兆字节。使用的恶意软件有效载荷的详细列表见表1。

# 6 评价

本节从三个方面对MaleficNet进行评估。1）对反恶意软件和隐蔽分析软件的隐蔽性；2）它对ML模型的性能影响；3）对模型权重参数操作的鲁棒性。

## 6.1 隐蔽性

**对抗反病毒软件的评估** 我们评估了MaleficNet在神经网络的权重中隐蔽地嵌入恶意载荷的能力，以对抗广泛的反恶意软件，如MetaDefender[27]。MetaDefender的元扫描功能由32个恶意软件检测引擎组成，我们的MaleficNet模型被提交给它们进行审查。在每次扫描中，MetaDefender套件的32个引擎没有一个能够检测到恶意软件的有效载荷被隐藏在模型文件的权重中。反恶意软件工具无法检测到隐藏在DNN模型权重中的恶意有效载荷的存在，这并不意外。反恶意软件工具在文件、可执行文件等中寻找特定的恶意软件模式（所谓的恶意软件签名）。由于MaleficNet采用固有的CDMA扩频信道编码特性，将恶意有效载荷嵌入模型的权重中，另一个实体（包括这里的反恶意软件工具）要发现隐藏在模型中的内容是非常具有挑战性的（见第2.3节）。此外，为了强调MaleficNet的隐蔽性，在表2中，我们比较了MetaDefender[27]报告的对普通恶意软件二进制文件、其用OpenStego[37]创建的隐蔽软件版本和我们MaleficNet方法的检测率。检测率代表了组成MetaDefender套件的反恶意软件引擎中能够检测到特定恶意软件存在的部分。从表中我们可以看出，MetaDefender套件在普通恶意软件二进制文件及其OpenStego版本的情况下可以检测到恶意内容的存在。相反，MetaDefender套件不能检测到通过MaleficNet嵌入的隐藏恶意软件。

表2. Metadefender[27]报告的普通恶意软件二进制文件、使用OpenStego[37]创建的这些恶意软件的隐蔽软件版本以及使用MaleficNet在VGG11[33]模型架构上获得的隐蔽软件的检测率

**统计分析。**为了完整起见，我们还通过对基线和MaleficNet模型的权重参数分布进行统计分析来评估MaleficNet的隐秘性。下面的评估强调，MaleficNet对模型的权重参数所引起的变化是最小的，不能被确定为恶意活动的标志。我们训练了十个不同的基线DNN模型，并使用MaleficNet将Stuxnet嵌入到这十个模型中的一个的权重参数中。我们对每个架构/数据集组合都进行了这个实验。我们使用双样本KolmogorovSmirnov（KS）统计测试比较每对模型的参数分布。KS检验是一种用于确定两个分布是否相同的统计检验。在我们的实验中，根据KS检验，每对DNN模型的权重参数分布在统计学上是不同的。这意味着，即使是同一数据集上同一架构的两个不同的常规训练程序（即改变参数的初始化，或优化器的超参数，或小批量的大小等）也会导致不同的权重参数分布。当一个模型被微调时，我们也观察到不同的分布。事实上，我们比较了基线模型和其微调版本之间的权重参数分布。根据双样本KS检验，起始模型和其微调后的对应模型具有不同的权重参数分布。

如第4节所示，MaleficNet采用的是 "双样本KS检验"。4，MaleficNet采用CDMA将恶意软件的有效载荷嵌入DNN的权重中。鉴于传播代码是以{-1, +1}中的值随机产生的，所以参数分布中任何二项性的迹象都可能是操纵权重的迹象，所以CDMA代码Cjbj遵循二项分布。我们进行了KS检验来检查MaleficNet模型参数的分布是否类似于二项式，结果是MaleficNet模型参数的分布不遵循二项式分布。MaleficNet模型参数不符合二项分布的原因是由于MaleficNet使用基于块的嵌入方法来嵌入有效载荷（见第4节）。



图1. 使用MaleficNet技术将各种大小的恶意软件嵌入ResNet101和VGG11之前和之后的权重参数分布比较



在图1中，我们描述了使用MaleficNet注入恶意软件有效载荷之前和之后的DNN权重参数分布的视觉比较。从每张图中我们可以看到，基线模型（没有恶意软件）和MaleficNet模型之间的视觉分布差异很小。

## 6.2 MaleficNet模型性能

为了评估MaleficNet的通用性，我们在不同的模型架构和不同的恶意软件有效载荷上使用它。在表3中，我们显示了在Imagenet数据集[12]上进行的五种架构的实验，我们试图嵌入12种不同大小的恶意软件，从几千字节到几兆字节（见表1）。我们报告了每个选定的模型架构在Imagenet数据集上的基线模型性能。在每个架构上，我们采用MaleficNet将不同类型的恶意软件有效载荷嵌入到模型中，从几千字节（如Stuxnet）到几兆字节（如Kelihos），以了解恶意软件有效载荷的大小如何影响模型的性能。

表3. 基线与MaleficNet模型在ImageNet数据集上的表现，不同的DNN架构对不同大小的恶意软件有效载荷的影响

在表3中，对于每个模型架构，我们根据经验显示了可以嵌入到模型中而不破坏它的有效载荷的大小。在试图将恶意软件嵌入其权重后，模型性能下降超过十个百分点的时刻，我们得出结论，该规模的恶意软件将不适合使用MaleficNet嵌入技术的该模型。在有可能注入有效载荷的情况下，表3中报告的MaleficNet模型的性能就在注入恶意有效载荷后。如第6.3节所示，我们可以在不破坏隐藏在模型权重中的恶意有效载荷的情况下，通过微调模型几个历时来恢复损失的性能。使用CDMA，我们可以对每个信道的使用编码多达一个比特[32]（见第4节）。然而，当信道中的噪声是高斯分布时，这一壮举是可能的。在我们的案例中，噪声是神经网络的学习权重，它与模型在预定任务上的行为密切相关。这就限制了我们在每个权重参数中可以编码的信息量；我们不应该使性能恶化。由于模型的性能依赖于所学的权重参数值，为了保持这种性能，这些权重参数不能被大量改变，所以我们可以在网络中编码的信息量是无法事先预测的。为了使更大的有效载荷的嵌入可行，在MaleficNet中，我们精心设计了一个基于块的嵌入（第4节），我们将神经网络参数分成几块，在每个块中，我们嵌入恶意软件的一部分有效载荷。

## 6.3 稳健性

我们评估MaleficNet有效载荷注入技术对模型参数改变过程的鲁棒性，如微调。微调是改变部分（或全部）模型权重参数的过程，以改善当前任务的模型或将模型重新用于不同（但类似）的任务。在图2中，我们报告了信噪比（SNR）来衡量微调对MaleficNet有效载荷信号造成的破坏。信噪比是信号功率与噪声功率的比率，以分贝表示。当信噪比高于1:1（大于0dB）时，信号多于噪声。

图2. 微调对通过MaleficNet嵌入不同DNN架构的恶意软件有效载荷的SNR的影响。在所有情况下注入的恶意软件有效载荷是Stuxnet

图2a显示了ResNet50模型首先在FashionMNIST数据集[44]上训练，然后通过MaleficNet技术将Stuxnet注入模型，之后以解决MNIST数字识别任务为目标重新使用时的SNR变化。微调的时间（以epochs为单位）与在FashionMNIST上的训练时间相等。MaleficNet有效载荷的信噪比略有下降，但微调不能使MaleficNet有效载荷信号明显恶化。

图2b显示了VGG11[33]模型首先在Cifar10[21]数据集上训练，然后通过MaleficNet技术将Stuxnet注入模型，之后被重新用于解决Cifar100任务时的SNR变化。与上面类似，MaleficNet有效载荷的信噪比略有下降，但有效载荷信号在模型权重中仍明显较强，这使得恶意软件有效载荷的提取得以正确。

图2c显示了ResNet50[17]模型首先在Imagenet[12]数据集上训练，然后通过MaleficNet技术将Stuxnet注入模型，之后重新用于解决猫与狗的任务时，SNR的变化。即使在这种情况下，MaleficNet有效载荷的信噪比略有下降，但有效载荷信号在模型权重中仍明显较强，这使得恶意软件有效载荷的提取得以正确。


表4. 使用Liu等人[25]、Wang等人[42]、Wang等人[43]和MaleficNet恶意软件嵌入技术对注入ResNet50的Stuxnet恶意软件有效载荷进行不同程度的模型参数修剪效果比较

# 7、可能的辩护方式

作为一个可能的尝试，以阻碍恶意软件嵌入技术，如[25,42,43]和MaleficNet，我们考虑模型参数修剪。参数修剪是一种常用于DNN后门清除的技术[16,24]，它通常通过将模型的一部分权重参数归零来进行。在Liu等人[25]中，嵌入技术依赖于将恶意软件有效载荷的各个比特映射到模型的各个权重参数中。即使将恶意有效载荷位之一映射的网络参数归零，也会破坏有效载荷，从而减轻攻击。通常情况下，参数修剪会将一个以上的模型参数归零，因此极有可能使一个恶意软件位被映射的模型参数失效。这对[42,43]也是有效的，将有效载荷映射的单个模型参数归零会破坏恶意软件的有效载荷。

另一方面，MaleficNet对这种可能的防御技术更加强大。使用CDMA在模型中注入恶意软件有效载荷，再加上使用LDPC纠错码，对参数修剪引入了一定程度的稳健性。这是因为，考虑到CDMA的工作原理（第2.3节），即使大部分模型参数被归零，非归零的权重也将有助于有效载荷信号被正确解码。我们报告了MaleficNet对模型参数修剪的鲁棒性，并与表4中的现有技术进行了比较，我们修剪了在Imagenet[12]数据集上训练的ResNet50[17]模型，其中嵌入了Stuxnet恶意软件。我们看到，即使修剪了75%的网络参数，也能恢复恶意的有效载荷，这在以前的有效载荷嵌入技术中是不可能实现的[25,42,43]。

一种更复杂的模型参数修剪技术，其目的是减少网络的整体大小，即模型压缩，它不是将一个参数归零，而是将整个神经元从模型中移除，从而产生不同的模型结构。模型压缩可以缓解MaleficNet的问题，之前的工作也是如此[25,42,43]。即使模型压缩可以证明对这个系列的威胁是有效的，但它需要广泛的机器学习专业知识和存在一个与原始训练数据集相同分布的数据集。由于大多数 DNN 消费者不具备这些技术技能和资源，只有具备这些技能和资源的实体才能安全地应用它们来减轻这种威胁，同时保持 DNN 在预期任务中的满意表现。

## 8 相关工作

据我们所知，Liu等人[25]是第一个通过将恶意软件嵌入深度神经网络模型来创造新品种的窃密软件。他们提出了四种将恶意软件二进制嵌入模型的方法，并根据模型的对数设计和评估了触发机制。Liu等人[25]介绍的第一种恶意软件嵌入方法是LSB替换法，即通过替换模型参数的最小有效位将恶意软件位嵌入到模型中。第二种方法包括LSB替换的一个更复杂的版本。其背后的想法是用恶意软件有效载荷的字节替换一组模型的权重参数的字节。之后，他们通过冻结修改后的权重参数（恶意软件被放置的地方）来执行模型再训练，以恢复模型的性能，只使用权重参数的其余部分。除了这两种方法，Liu等人[25]提出了基于映射的技术，将网络的权重值或符号映射（有时是替代）到恶意软件的位。他们把这些方法分别称为值映射和符号映射。Liu等人[25]证明，在LSB替换、弹性训练和价值映射的情况下，即使一个比特的单一翻转也会破坏恶意软件，从而使这些有效载荷嵌入技术在实践中不可靠和不可用，因为即使是简单的微调也会破坏恶意软件的提取。符号映射是[25]中提出的四种有效载荷嵌入技术中最稳健的一种，但它有几个限制。符号映射将恶意软件有效载荷的比特映射到模型权重的符号上。这意味着它能映射的比特数比其他方法更有限。根据Liu等人[25]报告的数据，符号映射技术可以嵌入的比特数量与MaleficNet可以嵌入的比特数量是同一个数量级。与MaleficNet相比，Liu等人[25]的符号映射需要明显更多的信息来进行有效载荷提取，即权重的互换图。相比之下，MaleficNet提取器只需要知道种子来生成CDMA扩频码。


Wang等人[42]提出了快速置换作为将恶意软件嵌入深度神经网络的方法。快速替换的工作方式是将模型中选定的一组权重的位子替换成来自恶意软件的位子。如果结果模型的性能受到严重损害，作者会恢复模型的性能，类似于Liu等人[25]提出的弹性训练方法，即冻结选定的权重组以嵌入有效载荷并重新训练模型。快速替换法与Liu等人[25]的LSB替换法、弹性训练法和价值映射法存在相同的缺点，使得它在供应链攻击场景中无法使用，因为在这种情况下，模型通常是微调的。Wang等人进一步扩展了他们的工作[43]，提出了两个额外的技术：最重要字节（MSB）保留和半替换。这两种方法都依赖于这样一个事实：当每个模型权重的第一个字节被保留时，模型的性能得到更好的保持。即使它们能保证较少的性能下降，这些方法也存在与快速置换相同的弱点，使得它们不适合用于微调的情况。

## 9 伦理学讨论

基于机器学习的解决方案在几乎每一个领域都得到了越来越多的采用，这为对手的恶意活动提供了肥沃的土壤，可以利用。这项工作的目的不是为恶意软件作者和恶意实体提供一种新的方法，让他们知道如何创建一个偷渡软件并造成潜在的损害，而是提高对这种攻击载体的存在和风险的认识。我们的目的是鼓励基于ML的解决方案的消费者从有信誉和值得信赖的实体获得服务，并激励研究人员和供应商开发强大的解决方案，提前缓解威胁。

# 10 结论

在本文中，我们介绍了MaleficNet，一种基于CDMA扩频信道编码的新型恶意软件隐藏技术。我们广泛的实证评估表明，MaleficNet恶意软件嵌入技术对模型的性能几乎没有任何影响，它可以不加修改地应用于任何模型结构和任务。我们证明了MaleficNet恶意软件嵌入技术仍未被最先进的反恶意软件引擎和统计工具检测到，这突出了这种技术可能对ML模型的供应链造成的新威胁。这里提出的工作在不断增长的威胁中提出了一个新的威胁，这些威胁可能来自于采用现成的基于ML的解决方案。通过这项工作，我们想让那些旨在使用这些现成的基于ML的解决方案的人/实体注意到他们的供应商的合法性。在未来的工作中，我们打算开发计算成本低的技术，能够破坏隐藏的恶意载荷，而不影响训练的ML模型的性能。

# 附录

## A 额外实验

不同深度神经网络架构上有无恶意软件的模型参数分布比较。

图3. 使用MaleficNet技术将各种大小的恶意软件嵌入到不同的DNN之前和之后的权重参数分布比较

猫与狗数据集的模型性能实验。(表5)

表5. 基线与MaleficNet模型在 "猫与狗 "数据集上的性能对比。不同的DNN架构对不同大小的恶意软件有效载荷的表现

## B 实施细节

在算法1和2中，我们展示了MaleficNet的注入和提取有效载荷方法的实施细节。算法1中描述的注入模块将模型W（分为大小为s的k块）作为输入，并使用CDMA信道编码技术将预先选择的恶意软件二进制文件注入到模型权重。为了快速验证恶意软件有效载荷是否被正确提取，MaleficNet的注入模块，除了恶意软件有效载荷外，还包括作为有效载荷一部分的恶意软件有效载荷二进制的256位哈希。如上所述，为了不降低模型在合法任务上的性能，我们将网络和有效载荷分成几块，并将一个有效载荷块嵌入到网络的一个块中。CDMA采用窄带信号，并将其分散在宽带信号中，以实现可靠的传输和解码。为了满足这一特性，网络的大块被选择为比有效载荷的一个大块的大小大数倍。在我们的实验中，窄带信号（有效载荷块）被传播到一个大6倍的宽带信号（模型块）中（即，有效载荷块的每个比特的传播代码将是该块长度的6倍）。

提取模块（算法2）将一个模型W（分为大小为s的k块）作为输入。为了提取恶意软件的有效载荷，提取器需要知道生成传播代码和LDPC矩阵的种子、验证提取是否成功的恶意软件二进制哈希值、窄带信号的大小（d）和恶意软件有效载荷的长度。利用前200个提取的比特，计算出信道噪声的估计值。之后，使用LDPC解码器来恢复有效载荷。提取模块返回恶意软件的有效载荷和哈希值。



